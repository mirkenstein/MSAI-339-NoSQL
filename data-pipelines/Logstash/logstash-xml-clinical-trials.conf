input {
  stdin{
    codec => multiline {
      pattern => "clinical_study"
      negate => "true"
      what => "previous"
      max_lines => 10000
    }
  }
  file {
    path => "${WORK_DIR}/AllPublicXML/NCT006*/*.xml"
    mode => "read"
    file_completed_action => "log"
    file_completed_log_path => "${WORK_DIR}/file_completed_log"
    sincedb_path  => "${WORK_DIR}/sincedb"
    start_position => "beginning"
    #max_open_files => 300000000
    codec => multiline {
    max_lines => 10000
      pattern => "clinical_study"
      negate => "true"
      what => "previous"
    }
  }
}
filter {
  mutate {
    add_field => { "xml" => "%{message}</clinical_study>" }
    remove_field =>  "message"
  }
  xml {
    source => "xml"
    #store_xml => false
    target => "doc"
    force_array => "false"
    namespaces => {
      "xsd" => "https://clinicaltrials.gov/ct2/html/images/info/public.xsd"

    }
  }
#~/bin/logstash-7.13.1/bin/logstash -f logstash-xml-clinical-trials.conf   < ${WORK_DIR}/tmp/AllPublicXML/NCT0001xxxx/NCT00010374.xml
#  dissect {
#     mapping => {
#             "[doc][eligibility][criteria][textblock]" => '
#             "%{        DISEASE CHARACTERISTICS}
#              %{        PATIENT CHARACTERISTICS}"'
#      }
#   }
   #(?<queue_id>"/DISEASE CHARACTERISTICS/"})
       grok {
           match => {   "[doc][eligibility][criteria][textblock]" => "(\n+)?(\s+)?(?<eligibility_criteria_textblock_start>(-\s)?(Inclusion [cC]riteria|INCLUSION CRITERIA)(:)?)(\n+)?(?<inclusion_criteria>[\s\S]+)(?<eligibility_criteria_textblock_end>(Exclusion [cC]riteria|EXCLUSION CRITERIA)(:)?)(\n+)?(?<exclusion_criteria>[\s\S]+)" }
         }
         #NCT04933539
         #NCT04937686
         #NCT04936360
  #(\n+)?(\s+)?(?<field_name>Inclusion Criteria:)(\n+)?(\s+)?(?<all_ff>[\s\S]+)(?<field_nam2>Exclusion Criteria:)(\n+)?(\s+)?(?<all_aa>[\s\S]+)
  #"Inclusion criteria for the patients"
  #Inclusion Criteria
  #Exclusion Criteria
  #DISEASE CHARACTERISTICS:
  #PATIENT CHARACTERISTICS:
  #PRIOR CONCURRENT THERAPY:

  mutate {
      remove_field =>  "xml"
     # copy => { "[doc][last_update_submitted]" => "last_update_submitted" }
    }
  date {
    match => [ "[doc][last_update_submitted]", "MMM dd, yyyy","MMM yyyy" ]
    target => "[doc][last_update_submitted]"
  }
  date {
    match => [ "[doc][last_update_submitted_qc]", "MMM dd, yyyy","MMM yyyy" ]
    target => "[doc][last_update_submitted_qc]"
  }
  date {
    match => [ "[doc][study_first_submitted]", "MMM dd, yyyy","MMM yyyy" ]
    target => "[doc][study_first_submitted]"
  }
  date {
    match => [ "[doc][study_first_submitted_qc]", "MMM dd, yyyy" ,"MMM yyyy"]
    target => "[doc][study_first_submitted_qc]"
  }
  date {
    match => [ "[doc][study_first_posted][content]", "MMM dd, yyyy","MMM yyyy" ]
    target => "[doc][study_first_posted][content]"
  }
  date {
    match => [ "[doc][last_update_posted][content]", "MMM dd, yyyy","MMM yyyy" ]
    target => "[doc][last_update_posted][content]"
  }

  if ![doc][start_date][content] {
      mutate {
               rename => { "[doc][start_date]" => "[doc][start_date][content]"   }
      }
  }
  if ![doc][completion_date][content] {
      mutate {
               rename => { "[doc][completion_date]" => "[doc][start_date][content]"   }
      }
  }
  if ![doc][enrollment][content] {
      mutate {
               rename => { "[doc][enrollment]" => "[doc][enrollment][content]"   }
      }
  }
# Integers
# doc.enrollment.content
mutate {
convert => {"[doc][enrollment][content]"=> "integer"}
}
# You are in a dialog. To close this dialog, hit escape.
#  doc.number_of_arms
}
output {
  stdout { codec => rubydebug }
  #stdout { codec => dots }
  #if "_xmlparsefailure" not in [tags] {
      elasticsearch {
       document_id => "%{[doc][id_info][nct_id]}"
      index => "logstash-clinical-trials"
      hosts => ["https://es1.dfh.ai:9200" ]
      user => "${USER}"
      password => "${PASSWORD}"
      cacert => "${WORK_DIR}/AllPublicXML/es-node.dfh.ai.ca"
  #    }
  }
}
